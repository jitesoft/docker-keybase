include:
  - https://gitlab.com/jitesoft/gitlab-ci-lib/raw/master/container_scan.yml

stages:
  - download
  - build
  - scan

download:
  stage: download
  image: registry.gitlab.com/jitesoft/dockerfiles/alpine:latest
  variables:
    GIT_STRATEGY: "none"
    FINGERPRINT: "222B85B0F90BE2D24CFEB93F47484E50656D16C7"
  before_script:
    - apk add --no-cache gnupg curl grep
    - |
      gpg --keyserver pgp.mit.edu --recv-keys "${GPG_KEY}" ||
      gpg --keyserver keyserver.pgp.com --recv-keys "${GPG_KEY}" ||
      gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "${GPG_KEY}"
  script:
    - curl -OsS https://prerelease.keybase.io/keybase_amd64.deb
    - curl -OsS https://prerelease.keybase.io/keybase_amd64.deb.sig
    - gpg --verify keybase_amd64.deb.sig keybase_amd64.deb
  artifacts:
    expire_in: 5 days
    paths:
      - keybase_amd64.deb

build:
  stage: build
  image: registry.gitlab.com/jitesoft/dockerfiles/docker:latest
  dependencies:
    - download
  variables:
    DOCKER_BUILDKIT: 1
  before_script:
    - apk add --no-cache wget grep
    - VERSION=$(wget -qO- https://github.com/keybase/client/releases | grep -oP '(?<=releases\/tag\/)(.*?)(?=\">)' | awk 'NR==1{print $1}')
    - echo ${CI_JOB_TOKEN} | docker login -u gitlab-ci-token registry.gitlab.com --password-stdin
    - echo ${DOCKER_HUB_PASSWORD} | docker login -u ${DOCKER_HUB_USER} --password-stdin
  script:
    - docker build -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA} --label "com.jitesoft.app.keybase.verson=${VERSION}" .
    - TAGS="latest ${VERSION}"
    - |
      for TAG in $TAGS; do
        docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA} ${CI_REGISTRY_IMAGE}:${TAG}
        #docker tag ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA} jitesoft/keybase:${TAG}
        docker push ${CI_REGISTRY_IMAGE}:${TAG}
        #docker push jitesoft/keybase:${TAG}
      done

scan:
  stage: scan
  extends: .container_scanning
  variables:
    SCANNING_IMAGE_NAME: "${CI_REGISTRY_IMAGE}:latest"
